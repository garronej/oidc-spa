OIDC_USE_MOCK=false

# By default we use keycloak but you can commend those envs and uncomment
# the one of another auth server to test.

# ======= Keycloak =================
OIDC_ISSUER_URI=https://cloud-iam.oidc-spa.dev/realms/oidc-spa
OIDC_CLIENT_ID=example-tanstack-start

# ======= Google OAuth =============
#   Changes to apply in src/oidc.ts
#   - You need to set `expectedAudience: ({ paramsOfBootstrap })=> paramsOfBootstrap.clientId`
#   - bootstrapOidc: You must provide the following two parameter alongside issuerUri and clientId:
#       - `__unsafe_clientSecret: process.OIDC_CLIENT_SECRET` (This is not actually a secret, it shouldn't be required, it's just a Google OAuth qwirk)
#       - `__unsafe_useIdTokenAsAccessToken: true`
# 
#   More details: https://docs.oidc-spa.dev/providers-configuration/google-oauth
#OIDC_ISSUER_URI=https://accounts.google.com
#OIDC_CLIENT_ID=928024164279-ifjvmsffi64slkk81h3gmoh7p03ev68k.apps.googleusercontent.com
#OIDC_CLIENT_SECRET=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 

# ======= Auth0 ====================
#   Changes to apply in src/oidc.ts
#   - `expectedAudience: ({ process }) => process.env.OIDC_AUDIENCE`
#   - In bootstrapOidc alongside issuerUri and clientId:
#       - `extraQueryParams: { audience: process.env.OIDC_AUDIENCE }`
#       - `idleSessionLifetimeInSeconds: parseInt(process.env.OIDC_SSO_SESSION_IDLE_SECONDS)`
# 
#   idleSessionLifetimeInSeconds is because I the test Auth0 account is configured with session
#   expiring 2 minutes after user inactivity (for testing auto logout) and Auth0 do not communicate
#   this value so if we want to display the auto logout overly we have to hard code this value here
#   even if it's not the source of truth.  
#
#   More details: https://docs.oidc-spa.dev/providers-configuration/auth0
#OIDC_ISSUER_URI=https://auth0.oidc-spa.dev
#OIDC_CLIENT_ID=DkoDtyQkYj4UPk3gKk4MjtnD9nskUhpt
#OIDC_AUDIENCE=https://oidc-spa-example
#OIDC_SSO_SESSION_IDLE_SECONDS=120

# =======================================
# =======================================



# === Optional Upstash Redis (enables persistent todos) ======
# This is because we can't use node:fs on vercel, we need a kv store
# See: https://upstash.com/
KV_REST_API_URL=
KV_REST_API_TOKEN=

